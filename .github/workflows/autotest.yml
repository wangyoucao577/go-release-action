name: Test

on:
  push:
    branches-ignore:
    - '*-prebuilt'

jobs:
  acceptance-test:
    name: Acceptance Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, "386", arm64]
        exclude:
          - goarch: "386"
            goos: darwin
          - goarch: arm64
            goos: windows
        include:
          - goamd64: [v1, v2, v3, v4]
            goos: [linux, windows, darwin]
            goarch: [amd64]
    steps:
    # - name: Wait release docker build for release branches
    #   if: contains(github.ref, 'release')
    #   uses: jakejarvis/wait-action@master
    #   with:
    #     time: '300s'
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set BUILD_TIME env
      run: echo BUILD_TIME=$(date) >> ${GITHUB_ENV}
    - name: Run go-release-action on test code
      uses: ./
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        goos: ${{ matrix.goos }}
        goarch: ${{ matrix.goarch }}
        goamd64: ${{ matrix.goamd64 }}
        goversion: https://go.dev/dl/go1.16.2.linux-amd64.tar.gz
        project_path: ./test/
        binary_name: testmain
        pre_command: go mod init localtest
        executable_compression: upx -v
        build_flags: -v
        ldflags: -X "main.buildTime=${{ env.BUILD_TIME }}" -X main.gitCommit=${{ github.sha }} -X main.gitRef=${{ github.ref }}
        md5sum: false
        sha256sum: true
        overwrite: true
        release_tag: v0.1-test-assets
        asset_name: testmain-acceptance-${{ matrix.goos }}-${{ matrix.goarch }}
        retry: 5
        post_command: echo "RELEASE_ASSET_FILE=$RELEASE_ASSET_FILE"

  setup-go-test:
    name: Set up Go Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux]
        goarch: [amd64]
        # "" means default
        goversion: ["", "1.13", "1.14", "1.15", "1.16", "1.17", "https://golang.org/dl/go1.16.1.linux-amd64.tar.gz"]
    steps:
    # - name: Wait release docker build for release branches
    #  if: contains(github.ref, 'release')
    #  uses: jakejarvis/wait-action@master
    #  with:
    #    time: '300s'
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set GO_VERSION_TAG env
      run: echo GO_VERSION_TAG=$(basename ${{ matrix.goversion }}) >> ${GITHUB_ENV}
    - name: Run go-release-action on test code
      uses: ./
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        goos: ${{ matrix.goos }}
        goarch: ${{ matrix.goarch }}
        goversion: ${{ matrix.goversion }}
        project_path: ./test/
        binary_name: testmain
        pre_command: go mod init localtest
        build_flags: -v
        ldflags: -X "main.buildTime=${{ env.BUILD_TIME }}" -X main.gitCommit=${{ github.sha }} -X main.gitRef=${{ github.ref }}
        md5sum: false
        overwrite: true
        release_tag: v0.1-test-assets
        asset_name: testmain-set-up-go-${{ env.GO_VERSION_TAG }}-${{ matrix.goos }}-${{ matrix.goarch }}

  build-via-makefile-test:
    name: Makefile Build Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin]
        goarch: [amd64, arm64]
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Run go-release-action on test code
      uses: ./
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        goos: ${{ matrix.goos }}
        goarch: ${{ matrix.goarch }}
        goversion: https://go.dev/dl/go1.16.6.linux-amd64.tar.gz
        project_path: ./test/
        binary_name: testmain
        pre_command: go mod init localtest
        build_command: make app
        md5sum: false
        sha256sum: false
        overwrite: true
        release_tag: v0.1-test-assets
        asset_name: testmain-via-makefile-${{ matrix.goos }}-${{ matrix.goarch }}
