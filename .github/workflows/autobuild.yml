name: Build Docker 

on: 
  push:
    branches-ignore:
    - '*-prebuilt'

jobs:

  build:
    name: Build & Publish Docker

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Set DOCKER_REPO_NAME env 
      run: echo DOCKER_REPO_NAME=$(basename ${GITHUB_REPOSITORY}) >> ${GITHUB_ENV}
    - name: Set IMAGE_TAG env 
      run: echo IMAGE_TAG=$(basename ${GITHUB_REF}) >> ${GITHUB_ENV}
    - name: Environment Printer
      uses: managedkaos/print-env@v1.0
    - name: Append latest if master branches # env '${IMAGE_TAG},latest'
      if: endsWith(github.ref, 'master')
      run: echo IMAGE_TAG=${IMAGE_TAG},master,latest >> ${GITHUB_ENV}
    - name: Environment Printer
      uses: managedkaos/print-env@v1.0

    - name: Build & Publish to Github Package
      uses: elgohr/Publish-Docker-Github-Action@master
      with:
        name: ${{ github.repository }}/${{ env.DOCKER_REPO_NAME }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: docker.pkg.github.com
        snapshot: false
        tags: "${{ env.IMAGE_TAG }}"

    - name: Build & Publish to Github Container Registry
      uses: elgohr/Publish-Docker-Github-Action@master
      with:
        name: ${{ github.actor }}/${{ env.DOCKER_REPO_NAME }}
        username: ${{ github.actor }}
        password: ${{ secrets.GHCR_IO_TOKEN }}
        registry: ghcr.io
        snapshot: false
        tags: "${{ env.IMAGE_TAG }}"

    - name: Build & Publish to DockerHub
      uses: elgohr/Publish-Docker-Github-Action@master
      with:
        name: ${{ github.repository }}
        username: ${{ github.actor }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        snapshot: false
        tags: "${{ env.IMAGE_TAG }}"

  basic-test:
    name: Basic Acceptance Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64]
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Run go-release-action on test code
      uses: ./
      with:
        github_token: "FAKE-TOKEN"
        goos: ${{ matrix.goos }}
        goarch: ${{ matrix.goarch }}
        goversion: https://golang.org/dl/go1.16.2.linux-amd64.tar.gz
        project_path: ./test/
        binary_name: testcmd
        pre_command: go mod init localtest